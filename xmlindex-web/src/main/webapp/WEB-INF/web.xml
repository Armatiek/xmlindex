<web-app 
  xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1">
  
  <filter>
    <filter-name>MiltonFilter</filter-name>
    <filter-class>io.milton.servlet.MiltonFilter</filter-class>
    
    <!-- This param shows how to exclude certain paths from the MiltonFilter -->
    <!-- These paths will "fall through" the filter and be handled as normal servlet resources -->
    <init-param>
      <param-name>milton.exclude.paths</param-name>
      <param-value>/myExcludedPaths,/moreExcludedPaths</param-value>
    </init-param>
    <init-param>
      <param-name>resource.factory.class</param-name>  
      <param-value>io.milton.http.annotated.AnnotationResourceFactory</param-value>
    </init-param>
    
    <!-- List packages where milton should find, and instantiate, controllers -->
    <init-param>
      <param-name>controllerPackagesToScan</param-name>
      <param-value>com.mycompany</param-value>
    </init-param>
    
    <!-- If using DefaultMiltonConfigurator, or a subclass, you can set any bean property of the HttpManagerBuilder here -->
    <init-param>
      <param-name>enableExpectContinue</param-name>
      <param-value>false</param-value>
    </init-param>        
  </filter>
  
  <filter-mapping>
    <filter-name>MiltonFilter</filter-name>
    <url-pattern>/webdav</url-pattern>
  </filter-mapping>
  
</web-app>